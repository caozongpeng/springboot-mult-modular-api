<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tz.dao.log.TMsgLogMapper" >
  <resultMap id="BaseResultMap" type="com.tz.dao.log.model.TMsgLog" >
    <id column="msg_id" property="msgId" jdbcType="VARCHAR" />
    <result column="exchange" property="exchange" jdbcType="VARCHAR" />
    <result column="routing_key" property="routingKey" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="try_count" property="tryCount" jdbcType="INTEGER" />
    <result column="next_try_time" property="nextTryTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.tz.dao.log.model.TMsgLog" extends="BaseResultMap" >
    <result column="msg" property="msg" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    msg_id, exchange, routing_key, status, try_count, next_try_time, create_time, update_time
  </sql>
  <sql id="Blob_Column_List" >
    msg
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.tz.dao.log.model.TMsgLogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_msg_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.tz.dao.log.model.TMsgLogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_msg_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_msg_log
    where msg_id = #{msgId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_msg_log
    where msg_id = #{msgId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.tz.dao.log.model.TMsgLogExample" >
    delete from t_msg_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.tz.dao.log.model.TMsgLog" >
    insert into t_msg_log (msg_id, exchange, routing_key, 
      status, try_count, next_try_time, 
      create_time, update_time, msg
      )
    values (#{msgId,jdbcType=VARCHAR}, #{exchange,jdbcType=VARCHAR}, #{routingKey,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{tryCount,jdbcType=INTEGER}, #{nextTryTime,jdbcType=TIMESTAMP}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{msg,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.tz.dao.log.model.TMsgLog" >
    insert into t_msg_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="msgId != null" >
        msg_id,
      </if>
      <if test="exchange != null" >
        exchange,
      </if>
      <if test="routingKey != null" >
        routing_key,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="tryCount != null" >
        try_count,
      </if>
      <if test="nextTryTime != null" >
        next_try_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="msg != null" >
        msg,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="msgId != null" >
        #{msgId,jdbcType=VARCHAR},
      </if>
      <if test="exchange != null" >
        #{exchange,jdbcType=VARCHAR},
      </if>
      <if test="routingKey != null" >
        #{routingKey,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="tryCount != null" >
        #{tryCount,jdbcType=INTEGER},
      </if>
      <if test="nextTryTime != null" >
        #{nextTryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="msg != null" >
        #{msg,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tz.dao.log.model.TMsgLogExample" resultType="java.lang.Integer" >
    select count(*) from t_msg_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_msg_log
    <set >
      <if test="record.msgId != null" >
        msg_id = #{record.msgId,jdbcType=VARCHAR},
      </if>
      <if test="record.exchange != null" >
        exchange = #{record.exchange,jdbcType=VARCHAR},
      </if>
      <if test="record.routingKey != null" >
        routing_key = #{record.routingKey,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.tryCount != null" >
        try_count = #{record.tryCount,jdbcType=INTEGER},
      </if>
      <if test="record.nextTryTime != null" >
        next_try_time = #{record.nextTryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.msg != null" >
        msg = #{record.msg,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update t_msg_log
    set msg_id = #{record.msgId,jdbcType=VARCHAR},
      exchange = #{record.exchange,jdbcType=VARCHAR},
      routing_key = #{record.routingKey,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      try_count = #{record.tryCount,jdbcType=INTEGER},
      next_try_time = #{record.nextTryTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      msg = #{record.msg,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_msg_log
    set msg_id = #{record.msgId,jdbcType=VARCHAR},
      exchange = #{record.exchange,jdbcType=VARCHAR},
      routing_key = #{record.routingKey,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      try_count = #{record.tryCount,jdbcType=INTEGER},
      next_try_time = #{record.nextTryTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tz.dao.log.model.TMsgLog" >
    update t_msg_log
    <set >
      <if test="exchange != null" >
        exchange = #{exchange,jdbcType=VARCHAR},
      </if>
      <if test="routingKey != null" >
        routing_key = #{routingKey,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="tryCount != null" >
        try_count = #{tryCount,jdbcType=INTEGER},
      </if>
      <if test="nextTryTime != null" >
        next_try_time = #{nextTryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="msg != null" >
        msg = #{msg,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where msg_id = #{msgId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.tz.dao.log.model.TMsgLog" >
    update t_msg_log
    set exchange = #{exchange,jdbcType=VARCHAR},
      routing_key = #{routingKey,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      try_count = #{tryCount,jdbcType=INTEGER},
      next_try_time = #{nextTryTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      msg = #{msg,jdbcType=LONGVARCHAR}
    where msg_id = #{msgId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tz.dao.log.model.TMsgLog" >
    update t_msg_log
    set exchange = #{exchange,jdbcType=VARCHAR},
      routing_key = #{routingKey,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      try_count = #{tryCount,jdbcType=INTEGER},
      next_try_time = #{nextTryTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where msg_id = #{msgId,jdbcType=VARCHAR}
  </update>
</mapper>